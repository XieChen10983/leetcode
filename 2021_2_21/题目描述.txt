1. 给你一个正整数 n ，生成一个包含 1 到 n2 所有元素，且元素按顺时针顺序螺旋排列的 n x n 正方形矩阵 matrix
    解法：只需要从外向内模拟转圈过程即可，每次转圈过程都是一个循环，一个循环包括从左到右，从上到下，从右到左，从下到上四个过程。

2. 给你一个 m 行 n 列的矩阵 matrix ，请按照 顺时针螺旋顺序 ，返回矩阵中的所有元素。
    解法：上右下左循环，边界从上=0，右=n-1，下=m-1，左=0开始，每次循环之后：
            上循环完上边界+1，右循环完右边界-1，下循环完下边界-1，左循环完左边界+1，总次数为m*n

3. 给定一个非负整数数组nums，你最初位于数组的第一个下标，数组中的每一个元素代表你在该位置可以跳跃的最大长度，判断是否能达到最后一个下标。
    解法：使用贪心算法。对于当前的下标，根据其元素遍历范围内的元素，找到能达到最远的地方(i + nums[currentIndex + i])的元素下标，作为
        下一个元素下标。当下一元素下标超过size时返回true，当下一个元素下标和当前位置一样时，返回false。注意在找下一个元素下标时，需要判断下标
        是否在合理的位置（是否已经超过），如果已经超过了直接返回true

4. 给你一个 无重叠的 ，按照区间起始端点排序的区间列表。 在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。
    解法：只需要判断是否有交集即可，无交集直接push_back.有交集的left = 小者，right等于大者