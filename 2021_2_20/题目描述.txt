1. EXCEL表序号A->1, B->2,..., AA->27
    ans += (s[index] - 'A' + 1) * k;
    k *= 26;

2. 给定一个整数 n，返回 n! 结果尾数中零的数量
    解法：5的幂次的倍数：ans = n / 5 + n / 25 + n / 125 + ... 循环当 n > pow(5, i)时

3. 给定一个32位无符号的二进制数，输出其十进制颠倒的数的二进制数。

4. 给定一组非负整数 nums，重新排列它们每个数字的顺序（每个数字不可拆分）使之组成一个最大的整数。
    自定义排序，可直接使用sort(nums.begin(), nums.end(), bigger)  bigger可以直接简单地return(a*b的位数+b > b*a的位数+a)实现。

5. 输入一个32位无符号的数，输出其二进制中1的个数。

6. 编写一个程序，找到两个单链表相交的起始节点。

7. 实现pow(x, n)